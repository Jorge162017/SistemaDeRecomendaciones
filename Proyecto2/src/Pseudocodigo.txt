import numpy as np

# Carga de datos
partidos = np.load('datos_partidos.npy')
jugadores = np.load('datos_jugadores.npy')
equipos = np.load('datos_equipos.npy')

# Análisis de datos
puntuaciones_equipos = np.mean(partidos, axis=0)
puntuaciones_jugadores = np.mean(partidos, axis=1)
media_equipos = np.mean(puntuaciones_equipos)
media_jugadores = np.mean(puntuaciones_jugadores)
desviacion_equipos = np.std(puntuaciones_equipos)
desviacion_jugadores = np.std(puntuaciones_jugadores)

# Recomendación
def recomendar(nombre):
    if nombre in equipos:
        puntuacion = puntuaciones_equipos[equipos == nombre]
        similitud = np.dot(puntuaciones_equipos, puntuacion) / (np.linalg.norm(puntuaciones_equipos) * np.linalg.norm(puntuacion))
        ranking = np.argsort(similitud)[::-1][:6]
        return list(equipos[ranking][1:])
    elif nombre in jugadores:
        puntuacion = puntuaciones_jugadores[jugadores == nombre]
        similitud = np.dot(puntuaciones_jugadores, puntuacion) / (np.linalg.norm(puntuaciones_jugadores) * np.linalg.norm(puntuacion))
        ranking = np.argsort(similitud)[::-1][:6]
        return list(jugadores[ranking][1:])
    else:
        return []